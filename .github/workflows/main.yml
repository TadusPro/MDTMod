name: Build .NET MAUI Blazor Hybrid

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  RID: 'win-x64'
  # Main repo cloned into a subfolder so the asset repo can live alongside it
  APP_DIR: 'MuledumpNET'
  SOLUTION_FILE: 'MuledumpNET/Muledump.NET.sln'
  PROJECT_FILE: 'MuledumpNET/Muledump.NET.csproj'
  ASSET_REPO: 'TadusPro/RotMGAssetExtractor'
  ASSET_PATH: 'RotMGAssetExtractor'

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout main repo into MuledumpNET subâ€‘folder
      - uses: actions/checkout@v4
        with:
          path: ${{ env.APP_DIR }}

      # Checkout RotMGAssetExtractor next to MuledumpNET (solution expects ..\RotMGAssetExtractor)
      - name: Checkout asset extractor repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.ASSET_REPO }}
          path: ${{ env.ASSET_PATH }}

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          dotnet-quality: 'ga'

      - name: Install MAUI workloads
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.SOLUTION_FILE }} -r ${{ env.RID }}

      - name: Build Release
        run: dotnet build ${{ env.SOLUTION_FILE }} -c Release --no-restore -f net8.0-windows10.0.19041.0 -r ${{ env.RID }}

      - name: Publish Windows
        run: dotnet publish ${{ env.PROJECT_FILE }} -c Release -f net8.0-windows10.0.19041.0 -r ${{ env.RID }} -p:PublishSingleFile=true -p:WindowsPackageType=msix -o publish/windows

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: WindowsOutputs
          path: publish/windows
